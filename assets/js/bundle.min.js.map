{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/BarChart.js","js/Controller.js","js/IdleDetector.js","js/LangSwitcher.js","js/MnistData.js","js/NeuralNetwork.js","js/Paint.js","js/SlideShow.js","js/TrainingVisualization.js","js/ValidationPreview.js","js/i18nController.js","js/main-babel.js","js/main.js","js/slide-controllers/design-network.js","js/slide-controllers/intro.js","js/slide-controllers/training.js","js/slide-controllers/what-is-training-data.js","js/slide.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","BarChart","el","_classCallCheck","this","cleanup","bars","cbarcontainer","document","createElement","className","classList","add","cbartext","innerHTML","concat","appendChild","firstChild","removeChild","probabilities","highlighted","arguments","undefined","dataset","probability","style","toggle","_Paint","_interopRequireDefault","_MnistData","_NeuralNetwork","_ValidationPreview","_TrainingVisualization","Controller","config","data","MnistData","dataloaded","testpaint","paintel","trainedmodel","tf","loadLayersModel","modelPath","paint","paintClearTimeout","load","els","loadData","trainingViz","vp","nn","trainingCallback","_trainingCallback","_asyncToGenerator","regeneratorRuntime","mark","_callee3","trainXs","trainYs","wrap","_context3","prev","next","_this","setCurrentTraining","stop","_x3","_x4","apply","batchCallback","trainingImageCount","trainingProgress","modelUpdateCallback","model","updateValidationImages","updateAccuracy","setNeuralNetwork","initValidationImages","modelid","optimizerid","learningRate","activation","init","clearDelayedTrainStepPreview","train","cb","pauseTraining","delayedTrainStepPreview","trainSingleStep","cleanupValidationPreview","cleanupPaint","cleanupNetwork","initTrainingEnvironment","_this2","traintimeout","setTimeout","predict","lastTrainStepTimeout","clearTimeout","toggleTraining","training","acc","addAccuracyCallback","defaultConstructorParams","eventTypes","domElement","IdleDetector","params","_Object$assign","Object","assign","_eventTypes","_domElement","_timeOfLastEvent","_maxId","_timers","_nonIdleHandler","reset","forEach","type","addEventListener","_this3","removeEventListener","repeat","func","timeoutDelay","_len","args","Array","_key","keys","_init","id","timers","timer","windowTimeoutId","callback","window","bind","clear","delete","intervalDelay","_len2","_key2","hasFired","windowIntervalId","intervalCallback","setInterval","clearInterval","_len3","_key3","_setTimeoutInternal","_len4","_key4","_len5","_key5","_setIntervalInternal","_len6","_key6","_deinit","performance","now","values","LangSwitcher","container","langChangeCallback","menuVisible","render","element","trigger","setAttribute","mask","menu","entries","languages","_ref","_ref2","_slicedToArray","name","item","link","innerText","ev","preventDefault","bottom","clientHeight","hideMenu","showMenu","stopPropagation","remove","IMAGE_SIZE","NUM_TRAIN_ELEMENTS","NUM_DATASET_ELEMENTS","shuffledTrainIndex","shuffledTestIndex","img","Image","canvas","ctx","getContext","willReadFrequently","imgRequest","Promise","resolve","reject","crossOrigin","onload","width","naturalWidth","height","naturalHeight","datasetBytesBuffer","ArrayBuffer","datasetBytesView","Float32Array","drawImage","imageData","getImageData","j","datasetImages","src","labelsRequest","fetch","all","labelsResponse","Uint8Array","arrayBuffer","datasetLabels","trainIndices","util","createShuffledIndices","testIndices","trainImages","slice","testImages","trainLabels","NUM_CLASSES","testLabels","batchSize","nextBatch","index","batchImagesArray","batchLabelsArray","idx","image","set","label","xs","tensor2d","labels","NeuralNetwork","options","modelUpdateAsyncCallback","console","log","trainedimages","lastrainedimages","pausecbs","dispose","sequential","layers","conv2d","inputShape","kernelSize","filters","strides","kernelInitializer","maxPooling2d","poolSize","flatten","dense","units","optimizer","adam","sgd","compile","loss","metrics","TRAIN_DATA_SIZE","BATCH_SIZE","setBackend","tidy","d","nextTrainBatch","reshape","fit","callbacks","onEpochEnd","_onEpochEnd","_callee","_context","onBatchEnd","_onBatchEnd","_callee2","_context2","trainByBatchFromData","Math","min","pop","push","addPauseCallback","_BarChart","SCALE_FACTOR","LINEWIDTH","Paint","outputThreshold","nwvis","clearTimeoutTime","drawingChanged","barchart","drawingActive","clearOnInput","pos","x","y","createUI","empty","isdown","pointerId","eventname","eventfunctions","pointerdown","removeClearTimeout","setPosition","pointermove","draw","pointerup","setClearTimeout","pointerleave","pointercancel","drawcanvas","passive","querySelector","normalizecanvas","outputbars","outputdigit","inputbox","addEventListeners","updateDimensions","floor","clientWidth","onresize","drawcontext","normalizecontext","rect","getBoundingClientRect","clientX","left","clientY","top","ox","oy","nx","ny","abs","beginPath","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","fillStyle","fillRect","normalize","SKIPFACTOR","boxsize","centerx","centery","right","totalweight","max","_tf$tidy2","predicted","_this4","imageTensor","browser","fromPixels","toFloat","mul","scalar","clipByValue","show","filter","k","result","dataSync","argMax","update","parentElement","removeEventListeners","_slide","SlideShow","controller","createEventMask","slides","from","querySelectorAll","map","getAttribute","currentSlide","currentSlideController","onhashchange","maskEvents","doSlideChange","unmaskEvents","event","key","goPrevious","goNext","eventMask","position","zIndex","pointerEvents","backgroundColor","display","body","goTo","currentID","indexOf","getCurrentSlide","includes","location","hash","substring","childNodes","btn","slide","onExit","open","nav","menuItem","onEnter","SlideClass","getClass","TrainingVisualization","network","acanvas","activations","actx","icanvas","input","ictx","traindigit","currentDigit","currentProbabilities","lt1","lt2","renderNetwork","renderActivations","arr","b","target","m","ccnt","findthreshold","N","M","weights","x0","y0","lastthreshold","threshold","nodeA","nodeB","val","globalAlpha","bezierCurveTo","radius","fill","cval","arc","PI","clearRect","clearNetwork","getWeights","w","drawdenselayer","HEIGHT","XOFFSET","clearActivations","active","imageSmoothingEnabled","currentTarget","drawnodes","intermediateActivations","trainX1","toPixels","computeActivations","trainY1","pixels","A1","A2","A3","_A3$argMax$dataSync2","prediction","_prediction$argMax$da2","ValidationPreview","accuracy","acccbs","validationImages","digittext","digitcontainer","examples","nextTestBatch","examplelabels","shape","testxs","TEST_DATA_SIZE","testXs","testYs","evaluate","validationAccuracy","round","I18nControler","defaultLanguage","IMAGINARY","i18n","queryStringVariable","translationsDirectory","then","setLang","path","getLang","response","status","text","statusText","content","err","error","_Controller","_IdleDetector","_SlideShow","_i18nController","_LangSwitcher","configDefaults","idleReload","en","defaultConfigUrl","URL","href","configUrl","urlSearchParams","URLSearchParams","search","has","customConfigName","get","whitelistRegex","test","toString","getCustomConfigUrl","cache","json","setLanguage","reload","aElement","DesignNetworkSlide","isBusy","istraining","select","option","value","resetadvancedoptions","updateUI","pr","onpointerdown","ooption","resetadvancednetwork","abrupt","singleStep","resetTraining","_callee4","_context4","pow","toPrecision","resetNetwork","rateSlider","rateLabel","oninput","rate","onchange","_callee5","_context5","registerClass","IntroSlide","initIntroPaint","TrainingSlide","WhatIsTrainingDataSlide","Slide","slideClasses","slideClass"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class BarChart {\n  constructor(el) {\n    this.el = el;\n    // cleanup potentially previously existing bars\n    this.cleanup();\n\n    this.bars = [];\n    for (let i = 0; i < 10; i += 1) {\n      const cbarcontainer = document.createElement('div');\n      cbarcontainer.className = 'barcontainer';\n      this.bars[i] = document.createElement('div');\n      this.bars[i].classList.add('bar');\n      const cbartext = document.createElement('div');\n      cbartext.className = 'bartxt';\n      cbartext.innerHTML = `${i}`;\n      cbarcontainer.appendChild(this.bars[i]);\n      cbarcontainer.appendChild(cbartext);\n      this.el.appendChild(cbarcontainer);\n    }\n  }\n\n  cleanup() {\n    while (this.el.firstChild) {\n      this.el.removeChild(this.el.firstChild);\n    }\n  }\n\n  update(probabilities, highlighted = -1) {\n    for (let i = 0; i < 10; i += 1) {\n      this.bars[i].dataset.probability = probabilities[i];\n      this.bars[i].style = `--probability: ${probabilities[i]}`;\n      this.bars[i].classList.toggle('highlighted', i === highlighted);\n    }\n  }\n}\n","/* globals tf */\nimport Paint from './Paint.js';\nimport { MnistData } from './MnistData.js';\nimport NeuralNetwork from './NeuralNetwork.js';\nimport ValidationPreview from './ValidationPreview.js';\nimport TrainingVisualization from './TrainingVisualization.js';\n\nexport default class Controller {\n  constructor(config) {\n    this.config = config;\n    this.data = new MnistData();\n    this.dataloaded = false;\n    this.testpaint = true;\n  }\n\n  async initIntroPaint(paintel) {\n    if (!this.trainedmodel) {\n      this.trainedmodel = await tf.loadLayersModel(this.config.modelPath);\n    }\n    this.paint = new Paint(\n      paintel,\n      this.trainedmodel,\n      0.5,\n      false,\n      this.config.paintClearTimeout);\n  }\n\n  async loadData() {\n    if (!this.trainedmodel) {\n      this.trainedmodel = await tf.loadLayersModel(this.config.modelPath);\n    }\n    if (!this.dataloaded) {\n      await this.data.load();\n      this.dataloaded = true;\n    }\n  }\n\n  async initTrainingEnvironment(els) {\n    await this.loadData();\n    this.trainingViz = new TrainingVisualization(els);\n    this.vp = new ValidationPreview(this.data, els);\n    this.nn = new NeuralNetwork({\n      trainingCallback: async (trainXs, trainYs) => {\n        await this.trainingViz.setCurrentTraining(trainXs, trainYs);\n      },\n      batchCallback: (trainingImageCount) => {\n        els.trainingProgress.innerHTML = trainingImageCount;\n      },\n      modelUpdateCallback: (model) => {\n        this.vp.updateValidationImages(model);\n        this.vp.updateAccuracy(model);\n      },\n    });\n    this.trainingViz.setNeuralNetwork(this.nn);\n\n    this.paint = new Paint(\n      els.paint,\n      this.nn.model,\n      0,\n      this.trainingViz,\n      this.config.paintClearTimeout\n    );\n\n    await this.vp.initValidationImages(els);\n    // this.nn might have been deleted because in the meanwhile the slide has been skipped\n    if (this.nn) {\n      this.vp.updateValidationImages(this.nn.model);\n      this.vp.updateAccuracy(this.nn.model);\n    }\n  }\n\n  resetNetwork(modelid, optimizerid, learningRate, activation) {\n    if (this.nn) {\n      this.nn.init(modelid, optimizerid, learningRate, activation);\n      this.paint.model = this.nn.model;\n    }\n  }\n\n  async startTraining() {\n    this.clearDelayedTrainStepPreview();\n    this.testpaint = false;\n    if (this.nn) {\n      await this.nn.train(this.data);\n    }\n  }\n\n  async pauseTraining(cb) {\n    if (this.nn) {\n      await this.nn.pauseTraining();\n      this.delayedTrainStepPreview(cb);\n    }\n  }\n\n  async singleStep(cb) {\n    if (this.nn) {\n      this.testpaint = false;\n      await this.nn.trainSingleStep(this.data);\n      this.delayedTrainStepPreview(cb);\n    }\n  }\n\n  async resetTraining(els) {\n    await this.pauseTraining();\n    this.cleanupValidationPreview();\n    this.cleanupPaint();\n    this.cleanupNetwork();\n    await this.initTrainingEnvironment(els);\n    this.testpaint = true;\n  }\n\n  delayedTrainStepPreview(cb) {\n    this.clearDelayedTrainStepPreview();\n    this.traintimeout = setTimeout(() => {\n      this.testpaint = true;\n      if (this.paint) this.paint.predict();\n      if (cb) cb();\n    }, this.config.lastTrainStepTimeout * 1000);\n  }\n\n  clearDelayedTrainStepPreview() {\n    if (this.traintimeout) {\n      clearTimeout(this.traintimeout);\n    }\n  }\n\n  toggleTraining(cb) {\n    this.clearDelayedTrainStepPreview();\n    if (this.nn) {\n      this.nn.toggleTraining(this.data);\n      this.testpaint = false;\n      if (!this.nn.training) {\n        this.delayedTrainStepPreview(cb);\n      }\n    }\n  }\n\n  cleanupNetwork() {\n    if (this.nn) {\n      this.nn.cleanup();\n      delete this.nn;\n    }\n  }\n\n  cleanupValidationPreview() {\n    if (this.vp) {\n      this.vp.cleanup();\n      delete this.vp;\n    }\n  }\n\n  cleanupPaint() {\n    if (this.paint) {\n      this.paint.cleanup();\n      delete this.paint;\n    }\n  }\n\n  addAccuracyCallback(acc, cb) {\n    this.vp.addAccuracyCallback(acc, cb);\n  }\n}\n","/* eslint-disable no-underscore-dangle,no-param-reassign */\n/*\nwritten by Christian Stussak, licensed under the Apache License 2.0.\ncopy from https://github.com/IMAGINARY/content-slider/blob/master/js/IdleDetector.js\n*/\n\nconst defaultConstructorParams = {\n  eventTypes: [\n    'pointerdown',\n    // 'pointermove',\n    'pointerup',\n    'pointercancel',\n    'keydown',\n    'keyup',\n  ],\n  domElement: document,\n};\n\nexport default class IdleDetector {\n  constructor(params = {}) {\n    const {\n      eventTypes,\n      domElement,\n    } = Object.assign(Object.assign({}, defaultConstructorParams), params);\n    this._eventTypes = eventTypes;\n    this._domElement = domElement;\n    this._timeOfLastEvent = 0;\n    this._maxId = 0;\n    this._timers = {};\n    this._nonIdleHandler = () => {\n      this.reset();\n    };\n  }\n\n  _init() {\n    this._eventTypes.forEach(type => this._domElement.addEventListener(\n      type, this._nonIdleHandler, true\n    ));\n  }\n\n  _deinit() {\n    this._eventTypes.forEach(type => this._domElement.removeEventListener(\n      type, this._nonIdleHandler, true\n    ));\n  }\n\n  _setTimeoutInternal(repeat, func, timeoutDelay, ...args) {\n    // event handlers should only be active if there are pending timeouts\n    if (Object.keys(this._timers).length === 0) {\n      this._init();\n    }\n\n    if (typeof timeoutDelay === 'undefined') {\n      timeoutDelay = 0;\n    }\n    this._maxId += 1;\n    const id = this._maxId;\n    const timers = this._timers;\n    const timer = {\n      id,\n      repeat,\n      timeoutDelay,\n      windowTimeoutId: 0,\n      callback() {\n        if (!repeat) {\n          this.delete();\n        }\n        func(...args);\n      },\n      reset() {\n        window.clearTimeout(this.windowTimeoutId);\n        this.windowTimeoutId = window.setTimeout(this.callback.bind(this), this.timeoutDelay);\n      },\n      clear() {\n        window.clearTimeout(this.windowTimeoutId);\n        this.windowTimeoutId = 0;\n      },\n      delete() {\n        this.clear();\n        delete timers[id];\n      },\n    };\n    timers[id] = timer;\n    timer.reset();\n    return id;\n  }\n\n  _setIntervalInternal(repeat, func, intervalDelay, timeoutDelay, ...args) {\n    // event handlers should only be active if there are pending timeouts\n    if (Object.keys(this._timers).length === 0) {\n      this._init();\n    }\n\n    if (typeof intervalDelay === 'undefined') {\n      intervalDelay = 0;\n    }\n    if (typeof timeoutDelay === 'undefined') {\n      timeoutDelay = intervalDelay;\n    }\n    this._maxId += 1;\n    const id = this._maxId;\n    const timers = this._timers;\n    const timer = {\n      id,\n      repeat,\n      hasFired: false,\n      timeoutDelay,\n      intervalDelay,\n      windowTimeoutId: 0,\n      windowIntervalId: 0,\n      callback() {\n        func(...args)\n        this.hasFired = true;\n      },\n      intervalCallback() {\n        this.windowIntervalId = window.setInterval(this.callback, this.intervalDelay);\n        this.callback();\n      },\n      reset() {\n        this.clear();\n        if (!this.repeat && this.hasFired) {\n          this.delete();\n        } else {\n          this.windowTimeoutId = window.setTimeout(\n            this.intervalCallback.bind(this), this.timeoutDelay\n          );\n        }\n      },\n      clear() {\n        window.clearTimeout(this.windowTimeoutId);\n        window.clearInterval(this.windowIntervalId);\n        this.windowTimeoutId = 0;\n        this.windowIntervalId = 0;\n      },\n      delete() {\n        this.clear();\n        delete timers[id];\n      },\n    };\n    timers[id] = timer;\n    timer.reset();\n    return id;\n  }\n\n  setTimeout(func, timeoutDelay, ...args) {\n    return this._setTimeoutInternal(true, func, timeoutDelay, ...args);\n  }\n\n  setTimeoutOnce(func, timeoutDelay, ...args) {\n    return this._setTimeoutInternal(false, func, timeoutDelay, ...args);\n  }\n\n  setInterval(func, intervalDelay, timeoutDelay, ...args) {\n    return this._setIntervalInternal(true, func, intervalDelay, timeoutDelay, ...args);\n  }\n\n  setIntervalOnce(func, intervalDelay, timeoutDelay, ...args) {\n    return this._setIntervalInternal(false, func, intervalDelay, timeoutDelay, ...args);\n  }\n\n  clearTimeout(id) {\n    if (typeof this._timers[id] !== 'undefined') {\n      this._timers[id].delete();\n    }\n\n    // event handlers should only be active if there are pending timeouts\n    if (Object.keys(this._timers).length === 0) {\n      this._deinit();\n    }\n  }\n\n  clearInterval(id) {\n    this.clearTimeout(id);\n  }\n\n  /**\n   * Interrupt the idle state and restart the timeouts and intervals.\n   */\n  reset() {\n    this._timeOfLastEvent = performance.now();\n    Object.values(this._timers).forEach(timer => timer.reset());\n  }\n\n  /**\n   * Clear all timeouts and intervals.\n   */\n  clear() {\n    Object.values(this._timers).forEach(timer => timer.delete());\n    this._deinit();\n  }\n\n  /**\n   * Return the time in ms since the last interruption of the idle state\n   * if there is at least one active (interval) timeout\n   * registered. Otherwise returns -1;\n   * @returns {number}\n   */\n  getIdleTime() {\n    if (Object.keys(this._timers).length === 0) {\n      return -1;\n    }\n    return performance.now() - this._timeOfLastEvent;\n  }\n}\n","export default class LangSwitcher {\n  constructor(container, config, langChangeCallback) {\n    this.menuVisible = false;\n    this.container = container;\n    this.config = config;\n    this.langChangeCallback = langChangeCallback;\n\n    this.render();\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.classList.add('lang-switcher');\n\n    this.trigger = document.createElement('button');\n    this.trigger.setAttribute('type', 'button');\n    this.trigger.classList.add('lang-switcher-trigger');\n    this.element.appendChild(this.trigger);\n\n    const mask = document.createElement('div');\n    mask.classList.add('lang-switcher-menu-mask');\n    this.element.appendChild(mask);\n\n    this.menu = document.createElement('ul');\n    this.menu.classList.add('lang-switcher-menu');\n    mask.appendChild(this.menu);\n\n    Object.entries(this.config.languages).forEach(([code, name]) => {\n      const item = document.createElement(('li'));\n      const link = document.createElement('button');\n      link.setAttribute('type', 'button');\n      link.innerText = name;\n      link.addEventListener('pointerdown', (ev) => {\n        this.langChangeCallback(code);\n        ev.preventDefault();\n      });\n      item.appendChild(link);\n      this.menu.appendChild(item);\n    });\n\n    this.container.appendChild(this.element);\n\n    this.menu.style.bottom = `${this.menu.clientHeight * -1 - 10}px`;\n\n    window.document.addEventListener('pointerdown', (ev) => {\n      if (this.menuVisible) {\n        this.hideMenu();\n      }\n    });\n    this.trigger.addEventListener('pointerdown', (ev) => {\n      if (!this.menuVisible) {\n        this.showMenu();\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  showMenu() {\n    this.menuVisible = true;\n    this.menu.classList.add('visible');\n  }\n\n  hideMenu() {\n    this.menuVisible = false;\n    this.menu.classList.remove('visible');\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst IMAGE_SIZE = 784;\nconst NUM_CLASSES = 10;\nconst NUM_DATASET_ELEMENTS = 65000;\n\nconst NUM_TRAIN_ELEMENTS = NUM_DATASET_ELEMENTS*0.8 | 0; //80% TODO make this custoumizeable\nconst NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\n\nconst MNIST_IMAGES_SPRITE_PATH =\n    'assets/mnist/mnist_images.png';\nconst MNIST_LABELS_PATH =\n    'assets/mnist/mnist_labels_uint8';\n\n/**\n * A class that fetches the sprited MNIST dataset and returns shuffled batches.\n *\n * NOTE: This will get much easier. For now, we do data fetching and\n * manipulation manually.\n */\nexport class MnistData {\n  constructor() {\n    this.shuffledTrainIndex = 0;\n    this.shuffledTestIndex = 0;\n  }\n\n  async load() {\n    // Make a request for the MNIST sprited image.\n    const img = new Image();\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d', { willReadFrequently: true });\n    const imgRequest = new Promise((resolve, reject) => {\n      img.crossOrigin = '';\n      img.onload = () => {\n        img.width = img.naturalWidth;\n        img.height = img.naturalHeight;\n\n        const datasetBytesBuffer =\n            new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\n\n        const chunkSize = 5000;\n        canvas.width = img.width;\n        canvas.height = chunkSize;\n\n        for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\n          const datasetBytesView = new Float32Array(\n              datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\n              IMAGE_SIZE * chunkSize);\n          ctx.drawImage(\n              img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\n              chunkSize);\n\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          for (let j = 0; j < imageData.data.length / 4; j++) {\n            // All channels hold an equal value since the image is grayscale, so\n            // just read the red channel.\n            datasetBytesView[j] = imageData.data[j * 4] / 255;\n          }\n        }\n        this.datasetImages = new Float32Array(datasetBytesBuffer);\n\n        resolve();\n      };\n      img.src = MNIST_IMAGES_SPRITE_PATH;\n    });\n\n    const labelsRequest = fetch(MNIST_LABELS_PATH);\n    const [imgResponse, labelsResponse] =\n        await Promise.all([imgRequest, labelsRequest]);\n\n    this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\n    // Create shuffled indices into the train/test set for when we select a\n    // random dataset element for training / validation.\n    this.trainIndices = tf.util.createShuffledIndices(NUM_TRAIN_ELEMENTS);\n    this.testIndices = tf.util.createShuffledIndices(NUM_TEST_ELEMENTS);\n\n    // Slice the the images and labels into train and test sets.\n    this.trainImages =\n        this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.trainLabels =\n        this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n    this.testLabels =\n        this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n  }\n\n  nextTrainBatch(batchSize) {\n    return this.nextBatch(\n        batchSize, [this.trainImages, this.trainLabels], () => {\n          this.shuffledTrainIndex =\n              (this.shuffledTrainIndex + 1) % this.trainIndices.length;\n          return this.trainIndices[this.shuffledTrainIndex];\n        });\n  }\n\n  nextTestBatch(batchSize) {\n    return this.nextBatch(batchSize, [this.testImages, this.testLabels], () => {\n      this.shuffledTestIndex =\n          (this.shuffledTestIndex + 1) % this.testIndices.length;\n      return this.testIndices[this.shuffledTestIndex];\n    });\n  }\n\n  nextBatch(batchSize, data, index) {\n    const batchImagesArray = new Float32Array(batchSize * IMAGE_SIZE);\n    const batchLabelsArray = new Uint8Array(batchSize * NUM_CLASSES);\n\n    for (let i = 0; i < batchSize; i++) {\n      const idx = index();\n\n      const image =\n          data[0].slice(idx * IMAGE_SIZE, idx * IMAGE_SIZE + IMAGE_SIZE);\n      batchImagesArray.set(image, i * IMAGE_SIZE);\n\n      const label =\n          data[1].slice(idx * NUM_CLASSES, idx * NUM_CLASSES + NUM_CLASSES);\n      batchLabelsArray.set(label, i * NUM_CLASSES);\n    }\n\n    const xs = tf.tensor2d(batchImagesArray, [batchSize, IMAGE_SIZE]);\n    const labels = tf.tensor2d(batchLabelsArray, [batchSize, NUM_CLASSES]);\n\n    return {xs, labels};\n  }\n}\n","/* eslint-disable no-await-in-loop */\n/* jshint esversion: 8 */\n/* globals tf */\n\nexport default class NeuralNetwork {\n  constructor(options) {\n    this.options = Object.assign({}, {\n      trainingCallback: null,\n      batchCallback: null,\n      modelUpdateCallback: null,\n      modelUpdateAsyncCallback: null,\n    }, options);\n    this.training = false;\n    this.init();\n  }\n\n  init(modelid = 'dense', optimizerid = 'adam', learningRate = 0.001, activation = 'relu') {\n    // eslint-disable-next-line no-console\n    console.log(`Setting up NN model=${modelid} optimizer=${optimizerid} learningrate=${learningRate} activation=${activation}`);\n    this.modelid = modelid;\n    this.trainedimages = 0;\n    this.lastrainedimages = 0;\n    this.pausecbs = [];\n\n    if (this.options.batchCallback) {\n      this.options.batchCallback(this.trainedimages);\n    }\n\n    // delete old model if it has been existing\n    if (this.model) {\n      this.model.dispose();\n    }\n\n    // create model\n    this.model = tf.sequential();\n    const { model } = this;\n\n    const IMAGE_WIDTH = 28;\n    const IMAGE_HEIGHT = 28;\n    const IMAGE_CHANNELS = 1;\n\n    if (modelid === 'cnn') {\n      // CNN\n      // In the first layer of our convolutional neural network we have\n      // to specify the input shape. Then we specify some parameters for\n      // the convolution operation that takes place in this layer.\n      model.add(tf.layers.conv2d({\n        inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        kernelSize: 5,\n        filters: 8,\n        strides: 1,\n        activation,\n        kernelInitializer: 'varianceScaling',\n      }));\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      model.add(tf.layers.maxPooling2d({\n        poolSize: [2, 2],\n        strides: [2, 2],\n      }));\n\n      // Repeat another conv2d + maxPooling stack.\n      // Note that we have more filters in the convolution.\n      model.add(tf.layers.conv2d({\n        kernelSize: 5,\n        filters: 16,\n        strides: 1,\n        activation,\n        kernelInitializer: 'varianceScaling',\n      }));\n      model.add(tf.layers.maxPooling2d({\n        poolSize: [2, 2],\n        strides: [2, 2],\n      }));\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      model.add(tf.layers.flatten());\n    } else if (modelid === 'dense') {\n      model.add(\n        tf.layers.flatten({\n          inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        })\n      );\n\n      model.add(tf.layers.dense({\n        units: 100,\n        activation,\n        kernelInitializer: 'varianceScaling',\n      }));\n    } else if (modelid === 'nohidden') {\n      model.add(\n        tf.layers.flatten({\n          inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        })\n      );\n    }\n\n    // Our last layer is a dense layer which has 10 output units, one for each\n    // output class (i.e. 0, 1, 2, 3, 4, 5, 6, 7, 8, 9).\n    const NUM_OUTPUT_CLASSES = 10;\n    model.add(tf.layers.dense({\n      units: NUM_OUTPUT_CLASSES,\n      kernelInitializer: 'varianceScaling',\n      activation: 'softmax',\n    }));\n\n    // Choose an optimizer, loss function and accuracy metric,\n    // then compile and return the model\n    const optimizer = (optimizerid === 'adam') ? tf.train.adam(learningRate) : tf.train.sgd(learningRate);\n    // tf.train.adam(learningRate);\n\n    model.compile({\n      optimizer,\n      loss: 'categoricalCrossentropy',\n      // optimizer: 'sgd',\n      // loss: 'meanSquaredError',\n      metrics: ['accuracy'],\n    });\n\n    return model;\n  }\n\n  async trainByBatchFromData(data, TRAIN_DATA_SIZE, BATCH_SIZE) {\n    if (TRAIN_DATA_SIZE === 1 || BATCH_SIZE === 1) {\n      tf.setBackend('cpu');\n      // fitting with single training-data results in NaNs when WebGL-backend is used\n      // for unknown reasons. Unfortunately, mixing cpu ang webgl backend changes the\n      // training in some way: Way more input images are required to obtain same accuracy\n    }\n    const { model } = this;\n    const [trainXs, trainYs] = tf.tidy(() => {\n      const d = data.nextTrainBatch(TRAIN_DATA_SIZE);\n      return [\n        d.xs.reshape([TRAIN_DATA_SIZE, 28, 28, 1]),\n        d.labels,\n      ];\n    });\n\n    if (this.options.trainingCallback) {\n      await this.options.trainingCallback(trainXs, trainYs);\n    }\n\n    await model.fit(trainXs, trainYs, {\n      batchSize: BATCH_SIZE,\n      callbacks: {\n        onEpochEnd: async () => {},\n        onBatchEnd: async () => {\n          this.trainedimages += BATCH_SIZE;\n          if (this.options.batchCallback) {\n            this.options.batchCallback(this.trainedimages);\n          }\n        },\n      },\n    });\n    tf.dispose(trainXs);\n    tf.dispose(trainYs);\n\n    if (TRAIN_DATA_SIZE === 1 || BATCH_SIZE === 1) {\n      tf.setBackend('webgl');\n      // fitting with single training-data results in NaNs when WebGL-backend\n      // is used for unknown reasons\n    }\n  }\n\n  async trainSingleStep(data) {\n    await this.trainByBatchFromData(data, 1, 1);\n    if (this.options.modelUpdateCallback) {\n      this.options.modelUpdateCallback(this.model);\n    }\n    if (this.options.modelUpdateAsyncCallback) {\n      await this.options.modelUpdateAsyncCallback(this.model);\n    }\n  }\n\n  async train(data) {\n    this.training = true;\n\n    while (this.training) {\n      // start slower in beginning, increase step size with time\n      // const BATCH_SIZE = 1 << (Math.max(4, Math.min(8, this.trainedimages / 20 | 0)));\n      // a sequence of increasing powers of two\n\n      // a constant BATCH_SIZE and TRAIN_DATA_SIZE increases the speed of convergence :/.\n      const BATCH_SIZE = 32;\n      const TRAIN_DATA_SIZE = 32; // *Math.min(8, Math.max(1, this.trainedimages / 40 | 0));\n\n      await this.trainByBatchFromData(data, BATCH_SIZE, TRAIN_DATA_SIZE);\n\n      if (this.trainedimages\n        > this.lastrainedimages + Math.min(1000, 0.3 * this.trainedimages)\n        || this.trainedimages < 250) {\n        if (this.options.modelUpdateCallback) {\n          this.options.modelUpdateCallback(this.model);\n        }\n        if (this.options.modelUpdateAsyncCallback) {\n          await this.options.modelUpdateAsyncCallback(this.model);\n        }\n        if ((this.trainedimages < 100)) {\n          // sleep some time per image\n          await new Promise(resolve => setTimeout(\n            resolve,\n            (1000 / (5 + 4 * this.trainedimages)) * (this.trainedimages - this.lastrainedimages)\n          ));\n        }\n        this.lastrainedimages = this.trainedimages;\n      }\n    }\n\n    while (this.pausecbs.length > 0) {\n      (this.pausecbs.pop())();\n    }\n  }\n\n  addPauseCallback(cb) {\n    this.pausecbs.push(cb);\n  }\n\n  pauseTraining() {\n    return new Promise((resolve) => {\n      if (this.training) {\n        this.addPauseCallback(resolve);\n        this.training = false;\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  isTraining() {\n    return this.training;\n  }\n\n  async toggleTraining(data) {\n    if (this.training) {\n      await this.pauseTraining();\n    } else {\n      await this.train(data);\n    }\n  }\n\n  cleanup() {\n    this.model.dispose();\n    this.trainedimages = 0;\n    this.lastrainedimages = 0;\n  }\n}\n","/* globals tf */\n/* eslint-disable no-bitwise */\nimport BarChart from './BarChart.js';\n\nlet SCALE_FACTOR = 9;\nlet LINEWIDTH = 2 * SCALE_FACTOR;\n\nexport default class Paint {\n  constructor(el, model, outputThreshold, nwvis = false, clearTimeoutTime = 2.2) {\n    this.clearTimeoutTime = clearTimeoutTime;\n    this.drawingChanged = true;\n    this.model = model;\n    this.nwvis = nwvis;\n    this.barchart = null;\n    this.drawingActive = true;\n    this.clearOnInput = false;\n\n    this.outputThreshold = outputThreshold;\n\n    // last known position\n    this.pos = {\n      x: 0,\n      y: 0,\n    };\n\n    this.createUI(el);\n    this.empty = true;\n    this.isdown = false;\n    this.pointerId = -1;\n  }\n\n  addEventListeners() {\n    this.eventfunctions = {\n      pointerdown: ((e) => {\n        if (!this.isdown && this.drawingActive) {\n          if (this.clearOnInput) {\n            this.clear();\n          }\n          this.removeClearTimeout();\n          this.setPosition(e);\n          this.isdown = true;\n          this.pointerId = e.pointerId;\n        }\n      }),\n      pointermove: ((e) => {\n        if (this.isdown && this.drawingActive && (this.pointerId === e.pointerId)) {\n          this.draw(e);\n        }\n      }),\n      pointerup: ((e) => {\n        if (this.drawingActive && (this.pointerId === e.pointerId)) {\n          this.setClearTimeout();\n          this.isdown = false;\n        }\n      }),\n      pointerleave: ((e) => {\n        if (this.drawingActive && (this.pointerId === e.pointerId)) {\n          this.setClearTimeout();\n          this.isdown = false;\n        }\n      }),\n      pointercancel: ((e) => {\n        if (this.drawingActive && (this.pointerId === e.pointerId)) {\n          this.setClearTimeout();\n          this.isdown = false;\n        }\n      }),\n    };\n\n    for (const eventname in this.eventfunctions) {\n      this.drawcanvas.addEventListener(eventname, this.eventfunctions[eventname], {\n        passive: true,\n      });\n    }\n  }\n\n  removeEventListeners() {\n    for (const eventname in this.eventfunctions) {\n      this.drawcanvas.removeEventListener(eventname, this.eventfunctions[eventname]);\n    }\n  }\n\n  createUI(el) {\n    this.drawcanvas = el.querySelector('.drawcanvas');\n    this.normalizecanvas = el.querySelector('.normalizecanvas') || document.createElement('canvas');\n    this.outputbars = el.querySelector('.bars');\n    this.outputdigit = el.querySelector('.digit');\n    this.inputbox = el.querySelector('.input.box');\n\n    this.addEventListeners();\n\n    const { normalizecanvas, drawcanvas } = this;\n\n    normalizecanvas.width = 28;\n    normalizecanvas.height = 28;\n\n    const updateDimensions = () => {\n      SCALE_FACTOR = Math.floor(this.drawcanvas.clientWidth / 28) - 1;\n      LINEWIDTH = 2 * SCALE_FACTOR;\n      drawcanvas.width = this.drawcanvas.clientWidth;\n      drawcanvas.height = this.drawcanvas.clientWidth;\n    };\n    updateDimensions();\n    window.onresize = () => {\n      updateDimensions();\n    };\n\n    this.drawcontext = this.drawcanvas.getContext('2d', { willReadFrequently: true });\n    this.normalizecontext = this.normalizecanvas.getContext('2d', { willReadFrequently: true });\n    // const { drawcontext, normalizecontext } = this;\n    //  normalizecanvas.style.width = 28 * SCALE_FACTOR + 'px';\n    //  normalizecanvas.style.height = 28 * SCALE_FACTOR + 'px';\n    //  normalizecanvas.style.imageRendering = 'pixelated';\n    /*\n        const resetbutton = document.createElement(\"button\");\n        this.resetbutton = resetbutton;\n        this.resetbutton.style.visibility = 'hidden';\n\n        resetbutton.innerHTML = \"reset\";\n        resetbutton.addEventListener('click', () => {\n          this.drawcontext.fillRect(0, 0, this.drawcanvas.width, this.drawcanvas.height);\n          this.normalize(100);\n          this.predict();\n          this.resetbutton.style.visibility = 'hidden';\n        });\n\n        this.drawcanvas.parentNode.insertBefore(resetbutton, this.drawcanvas);\n        this.resetbutton.style.position = \"absolute\";\n        this.resetbutton.style.zIndex = 10;\n    */\n    if (this.outputbars) {\n      this.barchart = new BarChart(this.outputbars);\n    }\n\n    this.clear();\n  }\n\n\n  setPosition(e) {\n    const rect = this.drawcanvas.getBoundingClientRect();\n    this.pos.x = (e.clientX - rect.left);\n    this.pos.y = (e.clientY - rect.top);\n    return true;\n  }\n\n  removeClearTimeout() {\n    if (this.clearTimeout) {\n      clearTimeout(this.clearTimeout);\n    }\n    return true;\n  }\n\n  setClearTimeout() {\n    this.removeClearTimeout(); // remove previous clearTimeouts\n    // clean up everything after specified time\n    this.clearTimeout = setTimeout(() => {\n      this.clear();\n    }, this.clearTimeoutTime * 1000);\n    return true;\n  }\n\n  setClearOnInput() {\n    this.clearOnInput = true;\n  }\n\n  draw(e) {\n    this.removeClearTimeout();\n    const ox = this.pos.x;\n    const oy = this.pos.y;\n    this.setPosition(e);\n    const nx = this.pos.x;\n    const ny = this.pos.y;\n    if (Math.abs(nx - ox) + Math.abs(ny - oy) < 3) {\n      this.pos.x = ox;\n      this.pos.y = oy;\n      return;\n    }\n    this.inputbox.classList.remove('background');\n    this.empty = false;\n    this.drawcontext.beginPath(); // begin\n    this.drawcontext.lineWidth = LINEWIDTH;\n    this.drawcontext.lineCap = 'round';\n    this.drawcontext.strokeStyle = 'white';\n\n    this.drawcontext.moveTo(ox, oy); // from\n    this.setPosition(e);\n    this.drawcontext.lineTo(nx, ny); // to\n\n    this.drawcontext.stroke(); // draw it!\n\n    this.normalizecontext.fillStyle = 'black';\n    this.normalizecontext.fillRect(0, 0, this.normalizecanvas.width, this.normalizecanvas.height);\n\n    this.drawingChanged = true;\n    this.normalize(LINEWIDTH);\n    this.predict();\n    // this.resetbutton.style.visibility = 'visible';\n  }\n\n  // normalize image\n  normalize(SKIPFACTOR) {\n    let centerx = 0;\n    let centery = 0;\n    let top = 1000;\n    let bottom = -1000;\n    let left = 1000;\n    let right = -1000;\n    const imgData = this.drawcontext.getImageData(\n      0, 0, this.drawcanvas.width, this.drawcanvas.height\n    );\n    const { data } = imgData;\n    let totalweight = 0;\n    for (let i = 0; i < data.length; i += 4 * SKIPFACTOR) {\n      const x = (i / 4) % this.drawcanvas.width;\n      const y = ((i / 4) / (this.drawcanvas.width)) | 0;\n      totalweight += data[i];\n      centerx += (data[i]) * x;\n      centery += (data[i]) * y;\n\n      if (data[i] > 0) {\n        top = Math.min(top, y);\n        bottom = Math.max(bottom, y);\n        left = Math.min(left, x);\n        right = Math.max(right, x);\n      }\n    }\n    if (totalweight > 0) {\n      centerx /= totalweight;\n      centery /= totalweight;\n\n      const boxsize = Math.max(right - left, bottom - top);\n\n      // according to MNIST normalization:\n      /*\n      The original black and white (bilevel) images from NIST were size normalized\n      to fit in a 20x20 pixel box while preserving their aspect ratio. The\n      resulting images contain grey levels as a result of the anti-aliasing\n      technique used by the normalization algorithm. the images were centered\n      in a 28x28 image by computing the center of mass of the pixels, and\n      translating the image so as to position this point at the center of the 28x28 field.\n      */\n      this.normalizecontext.drawImage(\n        this.drawcanvas,\n        left, top,\n        boxsize, boxsize,\n        14 + (20 / boxsize) * (left - centerx),\n        14 + (20 / boxsize) * (top - centery),\n        20, 20\n      );\n    } else {\n      this.normalizecontext.fillRect(0, 0, this.normalizecanvas.width, this.normalizecanvas.height);\n    }\n\n    return true;\n  }\n\n  predict() {\n    if (this.model && this.normalizecanvas && this.drawingChanged) { // && newFrame rendered TODO?\n      const [probabilities, predicted] = tf.tidy(() => {\n        const imageTensor = tf.browser\n          .fromPixels(this.normalizecanvas, 1)\n          .toFloat()\n          .mul(tf.scalar(1 / 255))\n          .clipByValue(0, 1)\n          .reshape([1, 28, 28, 1]);\n        if (this.nwvis) {\n          this.nwvis.show(imageTensor,\n            this.normalizecontext.getImageData(\n              0, 0,\n              this.normalizecanvas.width, this.normalizecanvas.height\n            ).data.filter((d, k) => (k % 4 === 0)));\n        }\n        const result = this.model.predict(imageTensor);\n        return [\n          result.dataSync(),\n          result.argMax([-1]).dataSync(),\n        ];\n      });\n\n      if (this.barchart) {\n        this.barchart.update(probabilities, predicted);\n      }\n\n      if (this.outputdigit) {\n        this.outputdigit.innerHTML = (!this.empty && probabilities[predicted] > this.outputThreshold) ? predicted : '?';\n        this.outputdigit.parentElement.classList.toggle('solved', probabilities[predicted] > this.outputThreshold);\n      }\n    }\n    return true;\n  }\n\n  swapModel(model) {\n    this.model = model;\n    this.predict();\n  }\n\n  clear() {\n    this.clearOnInput = false;\n    this.drawcontext.fillRect(0, 0, this.drawcanvas.width, this.drawcanvas.height);\n    this.empty = true;\n    this.normalize(100);\n    this.predict();\n    this.inputbox.classList.add('background');\n  }\n\n  cleanup() {\n    this.clear();\n    this.removeEventListeners();\n\n    // this.predict();\n    // this.resetbutton.style.visibility = 'hidden';\n\n    if (this.barchart) {\n      this.barchart.cleanup();\n    }\n  }\n\n  disableDrawing() {\n    this.drawingActive = false;\n    this.isdown = false;\n  }\n\n  enableDrawing() {\n    this.drawingActive = true;\n  }\n}\n","/* eslint-disable no-bitwise,class-methods-use-this,no-param-reassign */\nimport Slide from './slide.js';\n\nexport default class SlideShow {\n  constructor(controller) {\n    this.createEventMask();\n    this.controller = controller;\n    this.slides = Array.from(document.querySelectorAll('[data-slide]'))\n      .map(element => element.getAttribute('data-slide'));\n    this.currentSlide = 0;\n    this.currentSlideController = null;\n\n    window.onhashchange = async () => {\n      this.maskEvents();\n      await this.doSlideChange();\n      this.unmaskEvents();\n    };\n    this.doSlideChange();\n\n    window.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'ArrowLeft':\n          this.goPrevious();\n          break;\n        case 'ArrowRight':\n          this.goNext();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  createEventMask() {\n    this.eventMask = document.createElement('div');\n    this.eventMask.style.position = 'absolute';\n    this.eventMask.style.top = '0';\n    this.eventMask.style.left = '0';\n    this.eventMask.style.width = '100%';\n    this.eventMask.style.height = '100%';\n    this.eventMask.style.zIndex = '1000000';\n    this.eventMask.style.pointerEvents = 'all';\n    this.eventMask.style.backgroundColor = 'transparent';\n    this.eventMask.style.display = 'none';\n    window.document.body.appendChild(this.eventMask);\n  }\n\n  maskEvents() {\n    this.eventMask.style.display = 'block';\n  }\n\n  unmaskEvents() {\n    this.eventMask.style.display = 'none';\n  }\n\n  /**\n   * Go to the first slide\n   */\n  goFirst() {\n    if (this.slides.length > 0) {\n      this.goTo(this.slides[0]);\n    }\n  }\n\n  /**\n   * Go the net slide\n   */\n  goNext() {\n    const currentID = this.slides.indexOf(this.getCurrentSlide());\n    if (currentID < this.slides.length - 1) {\n      this.goTo(this.slides[currentID + 1]);\n    }\n  }\n\n  /**\n   * Go to the previous slide\n   */\n  goPrevious() {\n    const currentID = this.slides.indexOf(this.getCurrentSlide());\n    if (currentID > 0) {\n      this.goTo(this.slides[currentID - 1]);\n    }\n  }\n\n  /**\n   * Go to the requested slide\n   * @param {string} id\n   */\n  goTo(id) {\n    if (this.slides.includes(id)) {\n      window.location.hash = id;\n    }\n  }\n\n  /**\n   * Returns the ID of the current slide\n   * @return {null|string}\n   */\n  getCurrentSlide() {\n    const hash = window.location.hash.substring(1);\n    if (this.slides.length === 0) {\n      return null;\n    }\n\n    return (hash !== '' ? hash : this.slides[0]);\n  }\n\n  /**\n   * Handles a slide change by modifying the view and navigation\n   *\n   * @private\n   */\n  async doSlideChange() {\n    const currentSlide = this.getCurrentSlide();\n\n    document.querySelector('.footer .navigation').childNodes.forEach((btn) => {\n      btn.classList.remove('selected');\n    });\n\n    this.slides.forEach((slide) => {\n      const element = document.querySelector(`[data-slide=${slide}]`);\n      if (element.onExit && element.open) {\n        element.onExit(this.controller);\n      }\n      element.open = false;\n      element.classList.remove('visible');\n      element.classList.remove('entering');\n    });\n\n    if (this.currentSlideController) {\n      await this.currentSlideController.onExit();\n      this.currentSlideController = null;\n    }\n\n    const element = document.querySelector(`[data-slide=${currentSlide}]`);\n    if (element) {\n      const nav = element.getAttribute('data-slide-nav') || currentSlide;\n      const menuItem = document.querySelector(`.footer .navigation [href='#${nav}']`);\n      if (menuItem) {\n        menuItem.classList.add('selected');\n      }\n\n      element.open = true;\n      element.classList.add('visible');\n      setTimeout(() => {\n        element.classList.add('entering');\n      }, 0);\n      if (element.onEnter) {\n        element.onEnter(this.controller);\n      }\n\n      const SlideClass = Slide.getClass(currentSlide);\n      if (SlideClass) {\n        this.currentSlideController = new SlideClass(element, this.controller);\n        await this.currentSlideController.onEnter();\n      }\n    }\n  }\n}\n","/* globals tf */\n/* eslint-disable class-methods-use-this,no-param-reassign,no-bitwise */\nimport BarChart from './BarChart.js';\n\nconst HEIGHT = 500;\nconst DENSEWIDTH = 380;\nconst XOFFSET = 20;\n\nexport default class TrainingVisualization {\n  constructor(els) {\n    this.els = els;\n\n    this.canvas = this.els.network;\n    const { canvas } = this;\n    canvas.height = canvas.clientHeight;\n    canvas.width = canvas.clientWidth;\n    this.ctx = canvas.getContext('2d');\n\n    this.acanvas = this.els.activations;\n    const { acanvas } = this;\n    acanvas.height = acanvas.clientHeight;\n    acanvas.width = acanvas.clientWidth;\n\n    this.actx = acanvas.getContext('2d');\n\n    this.icanvas = this.els.input;\n    const { icanvas } = this;\n    icanvas.height = icanvas.clientHeight;\n    icanvas.width = icanvas.clientWidth;\n    this.ictx = icanvas.getContext('2d');\n\n    this.barchart = new BarChart(this.els.bars);\n\n    // this.lastvisualization = -1;\n    this.traindigit = document.createElement('canvas');\n    this.traindigit.height = 28;\n    this.traindigit.width = 28;\n  }\n\n  setNeuralNetwork(nn = null) {\n    this.nn = nn;\n    this.currentDigit = new Float32Array(784);\n    this.currentProbabilities = new Float32Array(10);\n    this.lt1 = 0.08;\n    this.lt2 = 0.2;\n\n    this.renderNetwork();\n    this.renderActivations();\n  }\n\n  findthreshold(arr, a, b, target) { // binary search to find good\n    const m = (a + b) / 2;\n    const ccnt = arr.filter(x => x * x > m * m).length;\n    if (b - a < 0.001 || Math.abs(ccnt - target) < target * 0.2) { // correct up to 20%\n      return m;\n    }\n\n    if (ccnt < target) {\n      // to few elements for threshold=m -> threshold should be smaller than m\n      return this.findthreshold(arr, a, m, target);\n    }\n\n    return this.findthreshold(arr, m, b, target);\n  }\n\n\n  drawdenselayer(N, M, weights, x0, y0, width, height, lastthreshold) {\n    const { ctx } = this;\n\n    // takes about 40ms for 784 weights\n    const threshold = this.findthreshold(weights, lastthreshold * 0.8, lastthreshold * 1.2, 200);\n    for (let nodeA = 0; nodeA < N; nodeA += 1) {\n      for (let nodeB = 0; nodeB < M; nodeB += 1) {\n        const val = weights[nodeA * M + nodeB];\n        if (val * val > threshold * threshold) {\n          ctx.beginPath();\n          ctx.globalAlpha = Math.abs(val) * (0.3 / threshold);\n          ctx.strokeStyle = val > 0 ? 'blue' : 'red';\n          ctx.moveTo(x0, y0 + nodeA * height / (N - 1));\n\n          // ctx.lineTo(x0 + width, y0 + nodeB * height / (M - 1));\n          ctx.bezierCurveTo(\n            x0 + width / 2, y0 + nodeA * height / (N - 1),\n            x0 + width / 2, y0 + nodeB * height / (M - 1),\n            x0 + width, y0 + nodeB * height / (M - 1)\n          );\n          ctx.stroke();\n        }\n      }\n    }\n    ctx.globalAlpha = 1;\n    return threshold;\n  }\n\n  drawnodes(ctx, N, values, x0, y0, height, radius) {\n    values = values || new Array(N).fill(0);\n    for (let nodeA = 0; nodeA < N; nodeA += 1) {\n      let cval = Math.max(128, 255 - (values[nodeA] * 128 | 0));\n      if (radius <= 2) {\n        cval = (cval + 128) / 2 | 0;\n      }\n      ctx.fillStyle = `rgb(${cval}, ${cval}, ${cval})`;\n      ctx.beginPath();\n      ctx.arc(x0, y0 + nodeA * height / (N - 1), radius, 0, 2 * Math.PI, false);\n      ctx.fill();\n    }\n  }\n\n  clearNetwork() {\n    const { canvas, ctx } = this;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  renderNetwork() {\n    this.clearNetwork();\n\n    if (this.nn && this.nn.modelid === 'dense') {\n      const { canvas, ctx } = this;\n      const weights = this.nn.model.getWeights().map(w => w.dataSync());\n      this.lt1 = this.drawdenselayer(\n        784, 100, weights[0], XOFFSET, 50, DENSEWIDTH, (HEIGHT - 100), this.lt1\n      );\n      this.lt2 = this.drawdenselayer(\n        100, 10, weights[2], XOFFSET + DENSEWIDTH, 50, DENSEWIDTH, (HEIGHT - 100), this.lt2\n      );\n    }\n  }\n\n  clearActivations() {\n    this.actx.clearRect(0, 0, this.acanvas.width, this.acanvas.height);\n    this.ictx.clearRect(0, 0, this.icanvas.width, this.icanvas.height);\n  }\n\n  renderActivations() {\n    this.clearActivations();\n\n    if (this.nn){\n      if (this.traindigit.active) {\n        this.ictx.imageSmoothingEnabled = false; // no antialiasin\n        this.ictx.filter = 'brightness(0.5) invert(1) brightness(0.95)';\n        this.ictx.drawImage(this.traindigit, 0, 0, 28, 28, 60, 60, 28 * 6, 28 * 6);\n        this.ictx.filter = 'none';\n      }\n\n      this.barchart.update(this.currentProbabilities, this.currentTarget);\n\n      this.drawnodes(this.actx, 784, this.currentDigit, XOFFSET, 50, (HEIGHT - 100), 0.5);\n      if (this.nn.modelid === 'dense') {\n        this.drawnodes(this.actx, 100, this.intermediateActivations,\n          XOFFSET + DENSEWIDTH, 50, (HEIGHT - 100), 1.5);\n      }\n    }\n  }\n\n  async setCurrentTraining(trainXs, trainYs) {\n    const trainX1 = trainXs.slice([0, 0, 0, 0], [1, 28, 28, 1]); // only the first\n    const imageTensor = trainX1.reshape([28, 28, 1]); // first as image\n    await tf.browser.toPixels(imageTensor, this.traindigit);\n    this.traindigit.active = true;\n    this.currentDigit = imageTensor.dataSync();\n    this.computeActivations(trainX1);\n    const trainY1 = trainYs.slice([0, 0], [1, 10]); // only the first\n    // const target = trainY1.reshape([10]);\n    [this.currentTarget] = trainY1.argMax([-1]).dataSync();\n    this.renderNetwork();\n    this.renderActivations();\n    // clean up tensors\n    trainX1.dispose();\n    trainY1.dispose();\n    imageTensor.dispose();\n    // target.dispose();\n  }\n\n  async show(imageTensor, pixels) {\n    this.computeActivations(imageTensor);\n    this.currentDigit = pixels;\n    this.traindigit.active = false;\n    this.renderActivations();\n  }\n\n  computeActivations(input) {\n    if (!this.nn) {\n      return;\n    }\n    if (this.nn.modelid === 'dense') {\n      const A1 = this.nn.model.layers[0].apply(input);\n      const A2 = this.nn.model.layers[1].apply(A1);\n      const A3 = this.nn.model.layers[2].apply(A2);\n      this.intermediateActivations = A2.dataSync().map(x => Math.abs(x) / 2);\n      this.currentProbabilities = A3.dataSync();\n      [this.currentTarget] = A3.argMax([-1]).dataSync();\n      A1.dispose();\n      A2.dispose();\n      A3.dispose();\n    } else {\n      const prediction = this.nn.model.predict(input);\n      this.currentProbabilities = prediction.dataSync();\n      [this.currentTarget] = prediction.argMax([-1]).dataSync();\n      prediction.dispose();\n    }\n  }\n}\n","/* eslint-disable no-await-in-loop */\n/* globals tf */\nconst NUM_EXAMPLES = 50; // TODO\n\nexport default class ValidationPreview {\n  constructor(data, els) {\n    this.data = data;\n    this.els = els;\n\n    this.reset();\n  }\n\n  reset() {\n    this.accuracy = 0;\n    this.acccbs = [];\n    this.cleanup();\n  }\n\n  async initValidationImages() {\n    if (this.els.validationImages) {\n      this.digittext = [];\n      this.digitcontainer = [];\n      // Get the examples\n      this.examples = this.data.nextTestBatch(NUM_EXAMPLES);\n      const { examples } = this;\n      this.examplelabels = await examples.labels.argMax([-1]).dataSync();\n\n      const container = document.createElement('div');\n      for (let i = 0; i < NUM_EXAMPLES; i += 1) {\n        // Reshape the image to 28x28 px\n        const imageTensor = tf.tidy(() => examples.xs\n          .slice([i, 0], [1, examples.xs.shape[1]])\n          .reshape([28, 28, 1]));\n\n        const canvas = document.createElement('canvas');\n        this.digitcontainer[i] = document.createElement('div');\n\n        await tf.browser.toPixels(imageTensor, canvas);\n        this.digitcontainer[i].appendChild(canvas);\n        this.digittext[i] = document.createElement('div');\n        this.digitcontainer[i].appendChild(this.digittext[i]);\n        container.appendChild(this.digitcontainer[i]);\n        imageTensor.dispose();\n      }\n      //\n      this.els.validationImages.appendChild(container);\n      // document.body.appendChild(container);\n    }\n  }\n\n  async updateValidationImages(model) {\n    if (this.els.validationImages) {\n      const values = tf.tidy(() => {\n        const testxs = this.examples.xs.reshape([NUM_EXAMPLES, 28, 28, 1]);\n        return model.predict(testxs).argMax([-1]).dataSync();\n      });\n      //  console.log(preds);\n\n      for (let i = 0; i < NUM_EXAMPLES; i += 1) {\n        // digittext[i].innerHTML = `${values[i]} (${examplelabels[i]})`;\n        this.digittext[i].innerHTML = `${values[i]}`;\n        this.digitcontainer[i].style.backgroundColor = (values[i] === this.examplelabels[i]) ? 'green' : 'red';\n      }\n    }\n  }\n\n  async updateAccuracy(model, TEST_DATA_SIZE = 100) {\n    this.accuracy = tf.tidy(() => {\n      const d = this.data.nextTestBatch(TEST_DATA_SIZE);\n      const testXs = d.xs.reshape([TEST_DATA_SIZE, 28, 28, 1]);\n      const testYs = d.labels;\n      return model.evaluate(testXs, testYs)[1].dataSync();\n    });\n\n    if (TEST_DATA_SIZE < 1000 && this.accuracy > 0.9) {\n      // compute more exact accuracy if it is close to 100%\n      await this.updateAccuracy(model, 1000);\n    }\n    // this.els.validationAccuracy.innerHTML =\n    // `Accuracy on validation data (approx.): ${(acc * 1000 | 0)/10} %`;\n    this.els.validationAccuracy.innerHTML = `${(this.accuracy < 0.9)\n      ? Math.round(this.accuracy * 100)\n      : Math.round(this.accuracy * 1000) / 10}%`;\n\n    // run all callbacks for a lower accuracy\n    this.acccbs.filter(p => p.acc <= this.accuracy).map(p => (p.cb)());\n    // delete all callbacks that have been run\n    this.acccbs = this.acccbs.filter(p => p.acc > this.accuracy);\n  }\n\n  /* This function is not used anymore: smooth rendering of accuracy */\n\n  cleanup() {\n    while (this.els.validationImages && this.els.validationImages.firstChild) {\n      this.els.validationImages.removeChild(this.els.validationImages.firstChild);\n    }\n  }\n\n  addAccuracyCallback(acc, cb) {\n    this.acccbs.push({\n      cb,\n      acc,\n    });\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* globals IMAGINARY */\n\nexport default class I18nControler {\n  static init(defaultLanguage = 'en') {\n    return IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage,\n    }).then(() => {\n      I18nControler.update();\n    });\n  }\n\n  static setLanguage(code) {\n    IMAGINARY.i18n.setLang(code).then(() => {\n      I18nControler.update();\n    });\n  }\n\n  static update() {\n    document.querySelectorAll('[data-i18n-str]')\n      .forEach((element) => {\n        element.innerHTML = IMAGINARY.i18n.t(element.getAttribute('data-i18n-str'));\n      });\n\n    document.querySelectorAll('[data-i18n-str-title]')\n      .forEach((element) => {\n        element.setAttribute(\n          'title',\n          IMAGINARY.i18n.t(element.getAttribute('data-i18n-str-title')));\n      });\n\n    document.querySelectorAll('[data-i18n-html]')\n      .forEach((element) => {\n        const path = `pages/${IMAGINARY.i18n.getLang()}/${element.getAttribute('data-i18n-html')}.html`;\n        fetch(path)\n          .then((response) => {\n            if (response.status >= 200 && response.status < 300) {\n              return response.text();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((content) => {\n            element.innerHTML = content;\n          })\n          .catch((err) => {\n            console.error(`Error fetching i18n page ${path}`);\n            console.error(err);\n          });\n      });\n  }\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n// import 'core-js/stable';\n// import 'regenerator-runtime/runtime';\n// import 'fetch-ie8';\nimport './main';\n","/* eslint-disable no-unused-vars */\nimport Controller from './Controller.js';\nimport IdleDetector from './IdleDetector.js';\nimport SlideShow from './SlideShow.js';\nimport I18nControler from './i18nController.js';\nimport LangSwitcher from './LangSwitcher.js';\n\nimport './slide-controllers/intro.js';\nimport './slide-controllers/training.js';\nimport './slide-controllers/what-is-training-data.js';\nimport './slide-controllers/design-network.js';\n\n/**\n * Return the URL of the user-supplied config file or {null} if it is not present.\n *\n * A custom config file name can be provided via the 'config' query string variable.\n * Allowed file names must match the regex /^[A-Za-z0\\-_.]+$/.\n *\n * @returns {URL|null} User-supplied config URL or {null} if not supplied.\n * @throws {Error} If the user-supplied config file name doesn't match the regex.\n */\nfunction getCustomConfigUrl() {\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  if (!urlSearchParams.has('config')) {\n    return null;\n  }\n\n  const customConfigName = urlSearchParams.get('config');\n  const whitelistRegex = /^[A-Za-z0\\-_.]+$/;\n  if (whitelistRegex.test(customConfigName)) {\n    return new URL(customConfigName, window.location.href);\n  }\n\n  throw new Error(`Custom config path ${customConfigName} must match ${whitelistRegex.toString()}.`);\n}\n\nconst configDefaults = {\n  paintClearTimeout: 2.2,\n  idleReload: 300,\n  lastTrainStepTimeout: 1.5,\n  languages: {\n    en: 'English',\n  },\n  defaultLanguage: 'en',\n  modelPath: 'assets/models/my-model.json',\n};\n\n\nconst defaultConfigUrl = new URL('./config.json', window.location.href);\nconst customConfigUrl = getCustomConfigUrl();\nconst configUrl = customConfigUrl || defaultConfigUrl;\n\nfetch(configUrl, { cache: 'no-store' })\n  .then((response) => {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    }\n    throw new Error(response.statusText);\n  })\n  .catch((err) => { throw new Error(`Failed to load config file ${configUrl}: ${err}`); })\n  .then((config => Object.assign({}, configDefaults, config)))\n  .then((config) => {\n    I18nControler.init(config.defaultLanguage).then(() => {\n      const controller = new Controller(config);\n      const slideShow = new SlideShow(controller);\n      controller.loadData();\n\n      if (Object.entries(config.languages).length > 1) {\n        const langSwitcher = new LangSwitcher(\n          document.querySelector('.footer .utility'),\n          config,\n          (code) => { I18nControler.setLanguage(code); }\n        );\n      }\n\n      const id = new IdleDetector();\n      id.setTimeout(() => {\n        window.location.hash = '#intro';\n        window.location.reload();\n        controller.loadData();\n      },\n      1000 * config.idleReload);\n\n      // Disable dragging a elements\n      document.querySelectorAll('a')\n        .forEach((aElement) => {\n          aElement.addEventListener('dragstart', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n          });\n        });\n    });\n  })\n  .catch(err => console.error(err));\n","/* eslint-disable no-param-reassign,no-restricted-properties */\nimport Slide from '../slide.js';\n\nexport default class DesignNetworkSlide extends Slide {\n  async onEnter() {\n    this.controller.testpaint = true;\n    let istraining = true;\n    let isBusy = false;\n    const d = document.querySelector('[data-slide=design-network] .train');\n    const resetadvancedoptions = () => {\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option, k) => {\n          option.classList.toggle('selected', k === 0);\n          if (k === 0) {\n            select.value = option.dataset.value;\n          }\n        });\n      });\n      d.querySelector('.learningrate').value = -3;\n      d.querySelector('.learningratetxt').innerHTML = '0.001';\n    };\n\n    resetadvancedoptions();\n\n    const els = {\n      trainingProgress: d.querySelector('.imagesused .number'),\n      // validationImages: d.querySelector('#validation-images'),\n      validationAccuracy: d.querySelector('.accuracy .number'),\n      input: d.querySelector('.traininputcanvas'),\n      network: d.querySelector('.simplenetwork > .network'),\n      activations: d.querySelector('.simplenetwork > .activations'),\n      bars: d.querySelector('.bars'),\n      paint: d.querySelector('.paint'),\n    };\n\n    const updateUI = () => {\n      istraining = (this.controller.nn && this.controller.nn.training);\n      if (this.controller.nn && this.controller.nn.trainedimages > 0) {\n        d.querySelector('.reset').classList.add('visible');\n      } else {\n        d.querySelector('.reset').classList.remove('visible');\n      }\n      d.querySelector('.paint').classList.toggle('visible', this.controller.testpaint);\n      d.querySelector('.training').classList.toggle('visible', !this.controller.testpaint);\n      if (this.controller.testpaint) {\n        if (this.controller.paint) {\n          this.controller.paint.clear();\n        }\n      }\n\n      const pr = d.querySelector('.pause-resume');\n\n      if (istraining) {\n        pr.classList.remove('resume');\n        pr.classList.add('pause');\n      } else {\n        pr.classList.add('resume');\n        pr.classList.remove('pause');\n      }\n\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option) => {\n          option.onpointerdown = () => {\n            if (select.value !== option.dataset.value) {\n              select.querySelectorAll('.option').forEach((ooption) => {\n                ooption.classList.toggle('selected', ooption === option);\n              });\n              select.value = option.dataset.value;\n              resetadvancednetwork();\n            }\n          };\n        });\n      });\n    };\n    updateUI();\n    /* buttons */\n    /*\n      if (d.querySelector(\".testit\")) d.querySelector(\".testit\").onpointerdown = async () => {\n        controller.testpaint = true;\n        updateUI();\n        await controller.pauseTraining();\n        updateUI();\n      };\n    */\n\n    d.querySelector('.pause-resume').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      istraining = !istraining;\n      await this.controller.toggleTraining(updateUI);\n      updateUI();\n      d.querySelector('.reset').classList.add('visible');\n      isBusy = false;\n    };\n\n    d.querySelector('.single-step').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      if (istraining) {\n        await this.controller.pauseTraining(updateUI);\n        // await controller.singleStep(updateUI);\n        istraining = false;\n      } else {\n        await this.controller.singleStep(updateUI);\n      }\n      updateUI();\n      isBusy = false;\n    };\n\n    d.querySelector('.reset').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      await this.controller.pauseTraining(updateUI);\n      await this.controller.resetTraining(els);\n      resetadvancednetwork();\n      updateUI();\n      isBusy = false;\n    };\n\n    /* expert mode */\n\n    const resetadvancednetwork = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      await this.controller.pauseTraining(updateUI);\n      const learningRate = Math.pow(10, d.querySelector('.learningrate').value);\n      d.querySelector('.learningratetxt').innerHTML = learningRate.toPrecision(1);\n      this.controller.resetNetwork(\n        d.querySelector('.modelid').value,\n        d.querySelector('.optimizerid').value,\n        learningRate,\n        d.querySelector('.activation').value\n      );\n      updateUI();\n      isBusy = false;\n    };\n\n    const rateSlider = d.querySelector('.learningrate');\n    const rateLabel = d.querySelector('.learningratetxt');\n    rateSlider.oninput = () => {\n      const rate = Math.pow(10, rateSlider.value);\n      rateLabel.innerText = rate.toPrecision(1);\n    };\n\n    d.querySelector('.learningrate').onchange = async () => {\n      resetadvancednetwork();\n    };\n\n    await this.controller.initTrainingEnvironment(els);\n    // controller.startTraining();\n    updateUI();\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n    await this.controller.pauseTraining();\n    this.controller.cleanupValidationPreview();\n    this.controller.cleanupNetwork();\n  }\n}\n\nSlide.registerClass('design-network', DesignNetworkSlide);\n","import Slide from '../slide.js';\n\nexport default class IntroSlide extends Slide {\n  async onEnter() {\n    await this.controller.initIntroPaint(this.element);\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n  }\n}\n\nSlide.registerClass('intro', IntroSlide);\n","/* eslint-disable no-param-reassign,no-restricted-properties */\nimport Slide from '../slide.js';\n\nexport default class TrainingSlide extends Slide {\n  async onEnter() {\n    this.controller.testpaint = true;\n    let istraining = true;\n    let isBusy = false;\n    const d = document.querySelector('[data-slide=training] .train');\n\n    const resetadvancedoptions = () => {\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option, k) => {\n          option.classList.toggle('selected', k === 0);\n          if (k === 0) {\n            select.value = option.dataset.value;\n          }\n        });\n      });\n      d.querySelector('.learningrate').value = -3;\n      d.querySelector('.learningratetxt').innerHTML = '0.001';\n    };\n\n    resetadvancedoptions();\n\n    const els = {\n      trainingProgress: d.querySelector('.imagesused .number'),\n      // validationImages: d.querySelector('#validation-images'),\n      validationAccuracy: d.querySelector('.accuracy .number'),\n      input: d.querySelector('.traininputcanvas'),\n      network: d.querySelector('.simplenetwork > .network'),\n      activations: d.querySelector('.simplenetwork > .activations'),\n      bars: d.querySelector('.bars'),\n      paint: d.querySelector('.paint'),\n    };\n\n    const updateUI = () => {\n      istraining = (this.controller.nn && this.controller.nn.training);\n      if (this.controller.nn && this.controller.nn.trainedimages > 0) {\n        d.querySelector('.reset').classList.add('visible');\n      } else {\n        d.querySelector('.reset').classList.remove('visible');\n      }\n      d.querySelector('.paint').classList.toggle('visible', this.controller.testpaint);\n      d.querySelector('.training').classList.toggle('visible', !this.controller.testpaint);\n      if (this.controller.testpaint) {\n        if (this.controller.paint) {\n          this.controller.paint.clear();\n        }\n      }\n\n      // d.querySelector(\".expertmode-on-off\").innerHTML = expertmode ? \"on\" : \"off\";\n\n      const pr = d.querySelector('.pause-resume');\n\n      if (istraining) {\n        pr.classList.remove('resume');\n        pr.classList.add('pause');\n      } else {\n        pr.classList.add('resume');\n        pr.classList.remove('pause');\n      }\n\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option) => {\n          option.onpointerdown = () => {\n            if (select.value !== option.dataset.value) {\n              select.querySelectorAll('.option').forEach((ooption) => {\n                ooption.classList.toggle('selected', ooption === option);\n              });\n              select.value = option.dataset.value;\n              resetadvancednetwork();\n            }\n          };\n        });\n      });\n    };\n    updateUI();\n    /* buttons */\n    /*\n      if (d.querySelector(\".testit\")) d.querySelector(\".testit\").onpointerdown = async () => {\n        controller.testpaint = true;\n        updateUI();\n        await controller.pauseTraining();\n        updateUI();\n      };\n    */\n\n    d.querySelector('.pause-resume').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      istraining = !istraining;\n      await this.controller.toggleTraining(updateUI);\n      updateUI();\n      d.querySelector('.reset').classList.add('visible');\n      isBusy = false;\n    };\n\n    d.querySelector('.single-step').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      if (istraining) {\n        await this.controller.pauseTraining(updateUI);\n        // await controller.singleStep(updateUI);\n        istraining = false;\n      } else {\n        await this.controller.singleStep(updateUI);\n      }\n      updateUI();\n      isBusy = false;\n    };\n\n    d.querySelector('.reset').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      await this.controller.pauseTraining(updateUI);\n      await this.controller.resetTraining(els);\n      await resetadvancednetwork();\n      updateUI();\n      isBusy = false;\n    };\n\n    /* expert mode */\n\n    const resetadvancednetwork = async () => {\n      await this.controller.pauseTraining(updateUI);\n      const learningRate = Math.pow(10, d.querySelector('.learningrate').value);\n      d.querySelector('.learningratetxt').innerHTML = learningRate.toPrecision(1);\n      this.controller.resetNetwork(\n        d.querySelector('.modelid').value,\n        d.querySelector('.optimizerid').value,\n        learningRate,\n        d.querySelector('.activation').value\n      );\n      updateUI();\n    };\n\n    const rateSlider = d.querySelector('.learningrate');\n    const rateLabel = d.querySelector('.learningratetxt');\n    rateSlider.oninput = () => {\n      const rate = Math.pow(10, rateSlider.value);\n      rateLabel.innerText = rate.toPrecision(1);\n    };\n\n    d.querySelector('.learningrate').onchange = async () => {\n      await resetadvancednetwork();\n    };\n\n    await this.controller.initTrainingEnvironment(els);\n    // controller.startTraining();\n    updateUI();\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n    await this.controller.pauseTraining();\n    this.controller.cleanupValidationPreview();\n    this.controller.cleanupNetwork();\n  }\n}\n\nSlide.registerClass('training', TrainingSlide);\n","import Slide from '../slide.js';\n\nexport default class WhatIsTrainingDataSlide extends Slide {\n  async onEnter() {\n    await this.controller.initIntroPaint(document.querySelector('#normalizepaint'));\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n  }\n}\n\nSlide.registerClass('what-is-training-data', WhatIsTrainingDataSlide);\n","/* eslint-disable class-methods-use-this */\nexport default class Slide {\n  constructor(element, controller) {\n    this.element = element;\n    this.controller = controller;\n  }\n\n  async onEnter() {\n    return Promise.resolve();\n  }\n\n  async onExit() {\n    return Promise.resolve();\n  }\n}\n\nSlide.slideClasses = {};\n\nSlide.registerClass = (id, slideClass) => {\n  Slide.slideClasses[id] = slideClass;\n}\n\nSlide.getClass = id => Slide.slideClasses[id];\n"]}