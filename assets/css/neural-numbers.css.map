{"version":3,"sources":["_warning.scss","_barchart.scss","../node_modules/bootstrap/scss/mixins/_breakpoints.scss","_colors.scss","_mod_component.scss","mod_training-component.scss"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;EACE;EACA;EACA;EACA;EACA;;ACoEE;EDzEJ;IAQI;;;;AAKF;EAEE;;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;;ACgDE;EDtDJ;IASI;IACA;IACA;IACA;;;;AAMF;AAAA;EACE;EACA;EACA;EACA;;;AAIJ;EACE;EACA;EACA;EACA;AACA;AACA;EACA;EACA;;ACoBE;ED5BJ;IAWI;IACA;IACA;IACA;;;;AAKJ;EACE;EACA;EACA;EACA;;;AAIF;EACE;EACA;EACA;EACA;EACA;;;AAGF;AACE;EACA;EACA;AACA;EACA;EACA;AACA;EACA;EACA,kBElFa;EFmFb;EACA;EACA;;ACnBE;EDOJ;IAeI;IACA;IACA;IACA;IACA;;;;AAKJ;EACE;EACA;EACA;EACA;;;AAIF;EACE;EACA;EACA;EACA;;;AAGF;EACE,YEjHa;;;ACJf;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;;AFyDA;EE9DF;IAQI;;;AAGF;EACE;;AAIJ;EACE;;AAGF;EACE;EACA;;AAIA;EACE;;AAKF;EACE;;AAKF;EACE;;AFuBF;EEjBE;IACE;;;AAKN;EACE;EACA;EACA;EACA,OAlEa;EAmEb,QAnEa;;AAsEf;EACE,OAvEa;EAwEb,QAxEa;EAyEb;EACA,eAzEe;EA0Ef;;AAEA;EACE;;AAIJ;EACE;EACA;EACA;EACA,OAtFa;EAuFb,QAvFa;EAwFb,QAvFe;EAwFf;EACA;EACA;EACA;EACA;EACA,ODlFS;ECmFT;EACA;EACA;EACA;EACA;;AAIA;EACE;;AAIJ;EACE;;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAIJ;EACE;EACA;EACA;;AFrDA;EEkDF;IAMI;IACA;;;AAIJ;EACE,QAvIa;EAwIb,OAxIa;;AFyEb;EE6DF;IAKI;;;AAGF;EACE,kBDxIS;ECyIT;EACA;EACA;;AAIJ;EACE;EACA,OAxJa;EAyJb,QAzJa;EA0Jb;;AFjFA;EE6EF;IAOI;IACA;;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAIA;EACE;;AAKN;EACE;EACA,OAvLa;EAwLb,QAxLa;EAyLb;EACA;EACA;EACA,aA5La;;AFyEb;EE4GF;IAUI;IACA;;;;AAMJ;EACE,kBDxLQ;;;AC6LV;EACE,kBD7LW;;;ACiMf;EACE;;AAEA;EACE;EACA;;AAGF;EACE;EACA;;AAGF;EACE;EACA;;;AC9NJ;EACE;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AAGF;EACE;;AAGF;EACE;EACA;EACA;;AAGF;EACE;;AAGF;EACE;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;;AAGF;EACE;;AAIJ;EACE;EACA;;AAGF;EACE;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AAIJ;EACE;EACA;EACA;EACA;;AAIA;EACE;EACA;;AAIJ;EACE;EACA;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA","file":"neural-numbers.css","sourcesContent":["/*************************************************/\n/* This file was automatically generated by sass */\n/* Don't edit it directly                        */\n/*************************************************/",".bars {\n  display: flex;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  flex-direction: row;\n\n  @include media-breakpoint-down(sm) {\n    flex-direction: column;\n  }\n}\n\n.bars {\n  &.bars-vertical,\n  &.vertical {\n    flex-direction: column;\n  }\n}\n\n.barcontainer {\n  position: relative;\n  height: 100%;\n  width: 10%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  @include media-breakpoint-down(sm) {\n    height: 20px;\n    width: 120px;\n    justify-content: flex-start;\n    flex-direction: row;\n  }\n}\n\n.vertical,\n.bars-vertical {\n  .barcontainer {\n    height: 10%;\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: flex-start;\n  }\n}\n\n.bartxt {\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-align: center;\n  /*bottom: 4px;*/\n  /*position: absolute;*/\n  padding-bottom: 7px;\n  padding-top: 7px;\n\n  @include media-breakpoint-down(sm) {\n    order: 1;\n    font-size: 16px;\n    text-align: left;\n    padding: 0;\n  }\n}\n\n// Used in the exhibit (training tab)\n.vertical .bartxt {\n  padding-right: 15px;\n  padding-left: 10px;\n  width: 10px;\n  padding-top: 10px;\n}\n\n// Used in the component\n.bars-vertical .bartxt {\n  font-size: 18px;\n  padding: 0 15px 0 10px;\n  margin-top: -2px;\n  width: 1em;\n  text-align: left;\n}\n\n.bar {\n  /*position: absolute;*/\n  margin-left: auto;\n  margin-right: auto;\n  /*bottom: 10%;*/\n  width: 20px;\n  box-sizing: border-box;\n  /*top: calc(100% - var(--probability)*90%);*/\n  height: calc(var(--probability) * 90%);\n  background-color: $color-yellow;\n  border: 2px solid #333007;\n  border-radius: 0;\n  min-height: 0;\n\n  @include media-breakpoint-down(sm) {\n    order: 2;\n    height: 20px;\n    width: calc(var(--probability) * 100px);\n    min-width: 0;\n    margin: 0 0 0 6px;\n  }\n}\n\n// Used in the exhibit (training tab)\n.vertical .bar {\n  margin: auto auto auto 0;\n  height: 20px;\n  width: calc(var(--probability) * 90%);\n  min-width: 0;\n}\n\n// Used in the component\n.bars-vertical .bar {\n  margin: auto auto auto 0;\n  height: 20px;\n  width: calc(var(--probability) * (100% - 3.4em));\n  min-width: 0;\n}\n\n.bar.highlighted {\n  background: $color-yellow;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","$color-black-real: #000;\n$color-white-real: #fff;\n\n$color-black: $color-black-real;\n$color-white: $color-white-real;\n$color-white-dark: #d8d8d8;\n\n$color-yellow: #ffec02;\n$color-yellow-light: #f9f3af;\n$color-yellow-dark: #cab900;\n\n$color-gray-light: #a5a5a5;\n$color-gray: #666;\n$color-gray-dark: #444;\n\n$color-red: #db4c67;\n$color-orange: #ff8459;\n$color-green: #73ff6c;\n$color-turquoise: #00c5ba;\n$color-blue: #3753be;\n$color-violet: #9c52ff;\n$color-magenta: #ef71f2;\n\n$color-red-light: #dfa0ac;\n$color-orange-light: #f4b6a0;\n$color-green-light: #c6f6c4;\n$color-turquoise-light: #b1e2df;\n$color-blue-light: #8f9ed3;\n$color-violet-light: #c19cef;\n$color-magenta-light: #eeb1ee;\n\n$color-red-dark: #a5112d;\n$color-orange-dark: #df4c1b;\n$color-green-dark: #3ac335;\n$color-turquoise-dark: #00887e;\n$color-blue-dark: #102ea2;\n$color-violet-dark: #6f2cc8;\n$color-magenta-dark: #bc46bf;\n\n@mixin neg {\n  -webkit-font-smoothing: antialiased;\n}\n","$input-box-size: 200px;\n$input-box-border: 8px;\n\n.neural-numbers-component {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-weight: 500;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n  height: $input-box-size + $input-box-border * 2;\n\n  .stage {\n    position: relative;\n    display: none;\n    flex: 0;\n    align-items: center;\n    margin-right: 50px;\n\n    @include media-breakpoint-down(sm) {\n      margin-right: 10px;\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  .stage-input {\n    display: flex;\n  }\n\n  .break {\n    height: 0;\n    flex-basis: 100%;\n  }\n\n  &.with-normalizer {\n    .stage-normalize {\n      display: flex;\n    }\n  }\n\n  &.with-bars {\n    .stage-bars {\n      display: flex;\n    }\n  }\n\n  &.with-output {\n    .stage-output {\n      display: flex;\n    }\n  }\n\n  @include media-breakpoint-down(sm) {\n    &.with-output.with-bars {\n      .stage-output {\n        display: none;\n      }\n    }\n  }\n\n  .drawcanvas, .normalizecanvas {\n    pointer-events: all !important;\n    filter: invert(1);\n    opacity: 0.5;\n    width: $input-box-size;\n    height: $input-box-size;\n  }\n\n  .input-canvas-wrapper {\n    width: $input-box-size;\n    height: $input-box-size;\n    border: $input-box-border dashed #666;\n    border-radius: $input-box-border;\n    box-sizing: content-box;\n\n    canvas {\n      touch-action: none;\n    }\n  }\n\n  .input-placeholder {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: $input-box-size;\n    height: $input-box-size;\n    margin: $input-box-border;\n    padding: 15px;\n    box-sizing: border-box;\n    text-align: center;\n    vertical-align: middle;\n    font-size: 25px;\n    color: $color-gray;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    transition: opacity 0.3s;\n    opacity: 0;\n  }\n\n  .stage-input.background {\n    .input-placeholder {\n      opacity: 0.8;\n    }\n  }\n\n  .normalize-canvas-wrapper {\n    position: relative;\n    &:after {\n      content: \" \";\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.3);\n      pointer-events: none;\n    }\n  }\n\n  .normalizecanvas {\n    width: $input-box-size * 0.75;\n    height: $input-box-size * 0.75;\n    opacity: 1;\n\n    @include media-breakpoint-down(sm) {\n      width: 100px;\n      height: 100px;\n    }\n  }\n\n  .bars {\n    height: $input-box-size;\n    width: $input-box-size;\n\n    @include media-breakpoint-down(sm) {\n      width: 100px;\n    }\n\n    .bar {\n      background-color: $color-yellow;\n      border: 2px solid #333007;\n      border-radius: 0;\n      min-height: 0;\n    }\n  }\n\n  .output-wrapper {\n    position: relative;\n    width: $input-box-size;\n    height: $input-box-size;\n    background: radial-gradient($input-box-size * 0.55, $color-yellow, transparent);\n\n    @include media-breakpoint-down(sm) {\n      width: 100px;\n      background: radial-gradient(55px, $color-yellow, transparent);\n    }\n\n    &:before {\n      content: \" \";\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: white;\n      transition: opacity 1s;\n      opacity: 1;\n    }\n\n    &.solved {\n      &:before {\n        opacity: 0;\n      }\n    }\n  }\n\n  .output {\n    position: relative;\n    width: $input-box-size;\n    height: $input-box-size;\n    font-size: $input-box-size * 0.8;\n    color: #16214b;\n    text-align: center;\n    line-height: $input-box-size;\n\n    @include media-breakpoint-down(sm) {\n      width: 100px;\n      font-size: 80px;\n    }\n  }\n}\n\n.neural-numbers-component-bad {\n  .bars .bar {\n    background-color: $color-red;\n  }\n}\n\n.neural-numbers-component-mediocre {\n  .bars .bar {\n    background-color: $color-orange;\n  }\n}\n\n.neural-numbers-component.large {\n  height: auto;\n\n  .input-canvas-wrapper {\n    width: 350px;\n    height: 350px;\n  }\n\n  .drawcanvas {\n    height: 350px;\n    width: 350px;\n  }\n\n  .input-placeholder {\n    width: 350px;\n    height: 350px;\n  }\n}\n","$button-spacing: 0.25rem;\n\n.neural-numbers-training-component {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  background-color: #f2f2f2;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n\n  .controls {\n    margin: 0 $button-spacing * -1;\n    align-self: center;\n  }\n\n  .image-count {\n    align-self: center;\n  }\n\n  .training-progress {\n    display: flex;\n    padding: 0 2rem;\n    align-self: center;\n  }\n\n  .accuracy {\n    display: flex;\n  }\n\n  .accuracy-label {\n    margin-right: 0.5rem;\n    align-self: center;\n    font-weight: bold;\n    text-align: right;\n  }\n\n  .accuracy-value {\n    line-height: 2rem;\n    font-size: 1.5rem;\n    font-weight: bold;\n    width: 2.1em;\n    text-align: right;\n    padding: 0.3rem 0.5rem;\n    color: #049404;\n\n    &[data-ranking='bad'] {\n      color: #d31616;\n    }\n\n    &[data-ranking='mediocre'] {\n      color: #c48606;\n    }\n  }\n\n  .image-count {\n    display: flex;\n    margin-right: 1rem;\n  }\n\n  .image-count-label {\n    margin-right: 0.5em;\n    font-weight: bold;\n    text-align: right;\n    align-self: center;\n  }\n\n  .image-count-value {\n    line-height: 2rem;\n    font-size: 1.5rem;\n    font-weight: bold;\n    width: 3em;\n    display: inline-block;\n  }\n\n  .btn {\n    font-size: 0;\n    border: 2px solid #b6b6b6;\n    border-radius: 50%;\n    background-size: 50%;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: white;\n    margin: 0 $button-spacing;\n    cursor: pointer;\n\n    &[disabled] {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n  }\n\n  .start-pause-btn {\n    width: 4rem;\n    height: 4rem;\n    background-image: url(\"../../assets/img/resume.svg\");\n    background-position: 60% center;\n  }\n\n  &.running {\n    .start-pause-btn {\n      background-image: url(\"../../assets/img/pause.svg\");\n      background-position: center center;\n    }\n  }\n\n  .step-btn {\n    width: 3.3rem;\n    height: 3.3rem;\n    background-image: url(\"../../assets/img/step.svg\");\n    background-size: 55%;\n    background-position: 42% center;\n  }\n\n  .reset-btn {\n    width: 3.3rem;\n    height: 3.3rem;\n    background-image: url(\"../../assets/img/reset.svg\");\n    background-size: 45%;\n    background-position: center 40%;\n  }\n}\n"]}